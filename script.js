
const addToCartButtons = document.querySelectorAll("#btn");//allows one to select all buttons with the common id
const orderBtn = document.getElementById("orderBtn");
const message = document.getElementById("preOrderMessage");
let currentOrder = document.getElementById('order');
let cart = [];//initializing the cart items to empty array

// Function to add an item to the cart
function addToCart(item) {
    cart.push({...item, quantity: 1});//adding new object(item) in the array cart
    //the object is set to come with a quantity of 1
  updateCartDisplay();//calls function updateCartDisplay
}

// Function to display the items that are ordered
function updateCartDisplay() {
  if (cart.length === 0) {//checking if the cart is empty
    message.style.display = "block";//this is styling the message 
    currentOrder.innerHTML = "";//display is empty when there are no items in the cart
  } else {
    message.style.display = "none";//removes the preorder message
      //below is a map function to iterate over each item in the cart array
    currentOrder.innerHTML = cart.map(item => `
      <div class="cart-item">
        ${item.name} - ${item.quantity} x $${item.price}
      </div>
    `//the part in quotes is the html structure of each item in the array
    ).join("");//it joins the strings generated by mmap function into a single string
  }
}

// Function to make changes when add cart is clicked
addToCartButtons.forEach(button => { //using forEach because this function applies to all target buttons
  button.addEventListener('click', (event) => {//event listener for a click
    const itemElement = event.target.closest('.item');//find the closest element with class item(its the parent container that houses the  add to cart buttons and also other information about the dessert being orderred)
    const itemName = itemElement.querySelector("#dessertName").innerText;//get the name of the dessert in the same container as the button
    const itemPrice = parseFloat(itemElement.querySelector("#price").innerText.replace('$', ''));//get price of the item and also remove dollar sign since I've used parsefloat for easier calculation
    addToCart({name: itemName, price: itemPrice});//add the element to the cart
  });
});
